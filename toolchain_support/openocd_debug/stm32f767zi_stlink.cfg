source [find mem_helper.tcl]

# Set the interface driver to the high level adapters interface with a ST-LINK layout (as opposed
# to TI or Nuvoton)
# The VID/PID pair is specifically for the ST-LINK V2-1 which the stm32f767zi uses as its debug
# probe
adapter driver    hla
hla_layout        stlink
hla_vid_pid       0x0483 0x374b

# ST-LINK V2-1 only supports SWD not JTAG and we use hla_swd b/c the interface driver is hla
transport select  hla_swd

# Set variables describing target (see ST RM0385 section 40.8.3 for details on the expected DAP ID)
set _CHIPNAME     stm32f7x
set _TARGETNAME   $_CHIPNAME.cpu
set _FLASHNAME    $_CHIPNAME.flash.axim
set _ENDIAN       little
set _WORKAREASIZE 0x4000
set _CPUDAPID     0x5ba02477

# Declare a new DAP instance linked to the JTAG TAP associated with the target CPU stm32f7x.cpu
swd newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUDAPID
dap create $_CHIPNAME.dap -chain-position $_TARGETNAME

# Create a GDB debug target that refers to the target CPU stm32f7x.cpu accessed via the stm32f7x
# dap DAP
target create $_TARGETNAME cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap

# Configure the working area for 16 kB at auxiliary SRAM
$_TARGETNAME configure -work-area-phys 0x2007c000 -work-area-size $_WORKAREASIZE -work-area-backup 0

# Configure the flash banks corresponding to the main internal flash (the stm32f2x flash driver
# will recognize the flash chip via its chip identification register and auto-configure itself
# which is why the flash bank declaration has all zeroes) and the OTP memory block via the AXIM
# interface (uses the same stm32f2x flash driver but we have to specify the base address for this
# region, 0x1FF0 F000)
flash bank $_FLASHNAME stm32f2x 0 0 0 0 $_TARGETNAME
flash bank $_CHIPNAME.otp stm32f2x 0x1ff0f000 0 0 0 $_TARGETNAME

# Because of the 2-interface approach to the internal flash on the stm32f767zi, we use the special
# 'virtual' flash driver to map the previously defined stm32f7x.flash.axim bank to the new virtual
# stm32f7x.flash.itcm bank and like the OTP memory we have to specify the base address for this
# region, 0x0020 0000
flash bank $_CHIPNAME.flash.itcm.alias virtual 0x00200000 0 0 0 $_TARGETNAME $_FLASHNAME

# Set the debug probe speed (which should be <= CPU sysclk/6), b/c on reset the HSI is the sysclk
# and its frequency is 16 MHz, the debug probe speed should be 2 MHz (1.8 is used b/c the debug
# probe can't match 2)
adapter speed 1800

# Configure OpenOCD to wait 100 ms after de-asserting system reset before starting new debug
# operations
adapter srst delay 100

# Update the reset config with only system reset being available and system reset not gating the
# SWD clock allowing for debug commands to be sent while SRST is active
reset_config srst_only srst_nogate






# Set specific actions for examine-end (after target examine is called with no errors)
$_TARGETNAME configure -event examine-end {
	# FCLK and HCLK stay on during standby, stop, or sleep modes
	mmw 0xE0042004 0x00000007 0

	# Window/independent watchdogs are stopped during halt
	mmw 0xE0042008 0x00001800 0
}

# Set specific actions for reset-start (first step in reset processing)
$_TARGETNAME configure -event reset-start {
	# Reduce debug probe speed to 1.8 MHz since HSI is sysclk
	adapter speed 1800
}